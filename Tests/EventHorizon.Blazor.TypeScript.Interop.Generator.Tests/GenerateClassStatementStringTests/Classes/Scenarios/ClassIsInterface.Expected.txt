/// Generated - Do Not Edit
namespace Examples
{
    using System;
    using System.Collections.Generic;
    using System.Text.Json.Serialization;
    using System.Threading.Tasks;
    using EventHorizon.Blazor.Interop;
    using EventHorizon.Blazor.Interop.Callbacks;
    using EventHorizon.Blazor.Interop.ResultCallbacks;
    using Microsoft.JSInterop;

    public interface ExampleClass<T, N> : ICachedEntity { }
    
    [JsonConverter(typeof(CachedEntityConverter<ExampleClassCachedEntity<CachedEntity>>))]
    public class ExampleClassCachedEntity<T, N> : CachedEntityObject, ExampleClass<T, N> where T : CachedEntity, new() where N : CachedEntity, new()
    {
        #region Static Accessors

        #endregion

        #region Static Properties

        #endregion

        #region Static Methods

        #endregion

        #region Accessors

        #endregion

        #region Properties

        #endregion
        
        #region Constructor
        public ExampleClassCachedEntity() : base() { }

        public ExampleClassCachedEntity(
            ICachedEntity entity
        ) : base(entity)
        {
        }


        #endregion

        #region Methods
        public ExampleClassCachedEntity<T, N> method()
        {
            return EventHorizonBlazorInterop.FuncClass<ExampleClassCachedEntity<T, N>>(
                entity => new ExampleClassCachedEntity<T, N>() { ___guid = entity.___guid },
                new object[]
                {
                    new string[] { this.___guid, "method" }
                }
            );
        }
        #endregion
    }
}